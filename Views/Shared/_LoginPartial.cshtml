@using Microsoft.AspNetCore.Identity
@using Tournament.Data.Models
@using Tournament.Infrastructure.Extensions
@inject SignInManager<User> SignInManager
@inject UserManager<User> UserManager

@{
    string displayName = "";
    if (User.Identity.IsAuthenticated)
    {
        var email = User.Identity.Name;
        var prefix = email.Split('@')[0];
        displayName = char.ToUpper(prefix[0]) + prefix.Substring(1);
    }
}

<ul class="navbar-nav">
    @if (SignInManager.IsSignedIn(User))
    {

        <li class="nav-item">
            <a class="nav-link text-light" asp-area="Identity" asp-page="/Account/Manage/Index">
                👋 @displayName
            </a>
        </li>
        <li class="nav-item">
            <span class="nav-link text-light">@displayName</span>
        </li>
        <li class="nav-item">
            <form id="logoutForm" class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })" method="post">
                <button type="submit" class="nav-link btn btn-link text-light">Изход</button>
            </form>
        </li>
    }
    else
    {
        <li class="nav-item">
            <a class="nav-link text-light" asp-area="Identity" asp-page="/Account/Register">Регистрирация</a>
        </li>
        <li class="nav-item">
            <a class="nav-link text-light" asp-area="Identity" asp-page="/Account/Login">Login</a>
        </li>
    }

</ul>
